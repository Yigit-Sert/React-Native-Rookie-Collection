import React from 'react';
import {
  Text,
  StyleSheet,
  SafeAreaView,
  ScrollView,
  Button,
} from 'react-native';
import { Link, Stack } from 'expo-router';

export default function ProjectExplanationScreen() {
  return (
    <SafeAreaView style={styles.container}>
      <Stack.Screen
        options={{ headerShown: true, title: 'Voice Record Project Explanation' }}
      />

      <ScrollView contentContainerStyle={styles.contentContainer}>
        <Text style={styles.header}>Project 7: Voice Record Project Explanation</Text>

        <Text style={styles.sectionHeader}>1. memos.tsx</Text>
        <Text style={styles.paragraph}>
          The `MemosScreen` component is the main screen of the project, which
          enables users to record audio memos and display them in a list. It uses
          Expo's `Audio` API for recording and playback, React Native Reanimated
          for animated UI elements, and a `FlatList` to display the recorded
          memos. When the user starts recording, the app dynamically updates the
          UI to show a visual representation of audio metering data. Each recorded
          memo is stored with its associated metering values and rendered as a
          list item.
        </Text>

        <Text style={styles.sectionHeader}>2. MemoListItem.tsx</Text>
        <Text style={styles.paragraph}>
          The `MemoListItem` component represents each recorded memo in the list.
          It manages the playback of the audio file, displaying playback controls
          and a waveform animation based on the memo's metering data. It uses
          Expo's `Audio.Sound` API to load and play the audio, and React Native
          Reanimated to animate the playback progress indicator and waveform. The
          waveform is generated by interpolating the memo's metering data into
          visual lines, which provide a dynamic visualization of the audio
          recording's volume levels over time.
        </Text>

        <Text style={styles.sectionHeader}>3. Animations</Text>
        <Text style={styles.paragraph}>
          Animations are used in multiple places to enhance the user experience.
          In `MemosScreen`, the record button and recording wave animations are
          controlled using `useSharedValue` and `useAnimatedStyle` from React Native
          Reanimated. The button's size and shape change depending on the recording
          state, and the recording wave animates based on the real-time audio
          metering data. In `MemoListItem`, a progress indicator is animated during
          playback, smoothly transitioning based on the playback status.
        </Text>

        <Text style={styles.sectionHeader}>4. Audio Management</Text>
        <Text style={styles.paragraph}>
          The project leverages Expo's `Audio` API for handling audio recording and
          playback. In `MemosScreen`, permissions are requested and the audio mode
          is set to enable recording. The `startRecording` function initializes a
          new recording and updates the UI with metering values, while the
          `stopRecording` function stops the recording and saves the audio file URI
          and metering data. The `MemoListItem` component handles loading the audio
          file for playback, updating the playback status, and controlling play and
          pause functionality.
        </Text>
      </ScrollView>

      <Link href={'/project7/memos'} asChild>
        <Button title="Go to Memos" />
      </Link>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f0f0f0',
  },
  contentContainer: {
    padding: 20,
  },
  header: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 10,
  },
  sectionHeader: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#555',
    marginTop: 15,
    marginBottom: 5,
  },
  paragraph: {
    fontSize: 16,
    color: '#444',
    marginBottom: 10,
    lineHeight: 24,
  },
});


// import { View, Text, Button } from 'react-native';
// import React from 'react';
// import { Link, Stack } from 'expo-router';
// import { SafeAreaView } from 'react-native-safe-area-context';


// const DayDetailsScreen = () => {
//   return (
//     <SafeAreaView edges={['bottom']} style={{ flex: 1 }}>
//       <Stack.Screen options={{ title: 'Project7: Voice' }} />


//       <Link href="/project7/memos" asChild>
//         <Button title="Go to Voice Memos" />
//       </Link>
//     </SafeAreaView>
//   );
// };

// export default DayDetailsScreen;